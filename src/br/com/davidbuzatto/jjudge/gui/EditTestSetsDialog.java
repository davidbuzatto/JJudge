package br.com.davidbuzatto.jjudge.gui;

import br.com.davidbuzatto.jjudge.testsets.Test;
import br.com.davidbuzatto.jjudge.testsets.TestCase;
import br.com.davidbuzatto.jjudge.testsets.TestProgrammingLanguage;
import br.com.davidbuzatto.jjudge.testsets.TestSet;
import br.com.davidbuzatto.jjudge.utils.Utils;
import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.PrintStream;
import java.util.ArrayList;
import java.util.List;
import java.util.ResourceBundle;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Prof. Dr. David Buzatto
 */
public class EditTestSetsDialog extends javax.swing.JDialog {
    
    private List<TestSet> testSets;
    private DefaultListModel<TestSet> listModelTestSets;
    private DefaultListModel<Test> listModelTests;
    private DefaultListModel<TestCase> listModelTestCases;
    private DefaultComboBoxModel<String> comboModelTestProgLanguages;
    
    private TestSet selectedTestSet;
    private Test selectedTest;
    private TestCase selectedTestCase;
    
    private int selectedIndexUpDown;
    
    private ResourceBundle bundle = Utils.bundle;
    
    /**
     * Creates new form ResultDialog
     */
    public EditTestSetsDialog( JFrame parent, boolean modal, List<TestSet> testSets ) {
        super( parent, modal );
        initComponents();
        customInit( testSets );
    }
    
    private void customInit( List<TestSet> testSets ) {
        
        setIconImage( new ImageIcon( getClass().getResource(
                "/br/com/davidbuzatto/jjudge/gui/icons/database_edit.png" ) ).getImage() );
        
        this.testSets = new ArrayList<>();
        this.selectedIndexUpDown = -1;
            
        try {

            if ( testSets != null ) {
                for ( TestSet ts : testSets ) {
                    this.testSets.add( (TestSet) ts.clone() );
                }
            }

            listModelTestSets = new DefaultListModel<>();
            listModelTests = new DefaultListModel<>();
            listModelTestCases = new DefaultListModel<>();
            comboModelTestProgLanguages = new DefaultComboBoxModel<>();

            listTestSets.setModel( listModelTestSets );
            listTests.setModel( listModelTests );
            listTestCases.setModel( listModelTestCases );
            comboTestSetProgLanguage.setModel( comboModelTestProgLanguages );

            for ( TestSet ts : this.testSets ) {
                listModelTestSets.addElement( ts );
            }

            for ( TestProgrammingLanguage tpl : TestProgrammingLanguage.class.getEnumConstants() ) {
                comboModelTestProgLanguages.addElement( tpl.name() );
            }

        } catch ( CloneNotSupportedException exc ) {
            Utils.showException( exc );
        }
        
    }

    public List<TestSet> getTestSets() {
        return testSets;
    }
    
    private void preparePopupMenuUpDown( DefaultListModel model, int selectedIndex ) {
        
        int modelSize = model.getSize();
        
        if ( selectedIndex == 0 ) {
            menuItemUp.setEnabled( false );
        }
        
        if ( selectedIndex == modelSize - 1 ) {
            menuItemDown.setEnabled( false );
        }
        
    }
    
    private <T> void moveItem( 
            DefaultListModel<T> model, 
            JList<T> jList, 
            List<T> list, 
            int from, 
            int to ) {
        
        T getFrom = model.getElementAt( from );
        T changeTo = model.getElementAt( to );
        model.setElementAt( getFrom, to );
        model.setElementAt( changeTo, from );

        jList.setSelectedIndex( to );

        getFrom = list.get( from );
        changeTo = list.get( to );
        list.set( to, getFrom );
        list.set( from, changeTo );
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings( "unchecked" )
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        popupMenuUpDown = new javax.swing.JPopupMenu();
        menuItemUp = new javax.swing.JMenuItem();
        menuItemDown = new javax.swing.JMenuItem();
        panelTestSets = new javax.swing.JPanel();
        scrollTestSets = new javax.swing.JScrollPane();
        listTestSets = new javax.swing.JList<>();
        panelTestSetSet = new javax.swing.JPanel();
        lblTestSetDescription = new javax.swing.JLabel();
        lblTestSetProgLanguage = new javax.swing.JLabel();
        fieldTestSetDescription = new javax.swing.JTextField();
        comboTestSetProgLanguage = new javax.swing.JComboBox<>();
        btnNewTestSet = new javax.swing.JButton();
        btnSaveTestSet = new javax.swing.JButton();
        btnDeleteTestSet = new javax.swing.JButton();
        panelTests = new javax.swing.JPanel();
        scrollTests = new javax.swing.JScrollPane();
        listTests = new javax.swing.JList<>();
        btnNewTest = new javax.swing.JButton();
        btnSaveTest = new javax.swing.JButton();
        btnDeleteTest = new javax.swing.JButton();
        panelTestData = new javax.swing.JPanel();
        lblTestPresName = new javax.swing.JLabel();
        lblTestName = new javax.swing.JLabel();
        fieldTestPresName = new javax.swing.JTextField();
        fieldTestName = new javax.swing.JTextField();
        panelTestCases = new javax.swing.JPanel();
        scrollTestCases = new javax.swing.JScrollPane();
        listTestCases = new javax.swing.JList<>();
        btnNewTestCase = new javax.swing.JButton();
        btnSaveTestCase = new javax.swing.JButton();
        btnDeleteTestCase = new javax.swing.JButton();
        panelTestCaseData = new javax.swing.JPanel();
        lblTestCaseInput = new javax.swing.JLabel();
        lblTestCaseOutput = new javax.swing.JLabel();
        scrollTestCaseInput = new javax.swing.JScrollPane();
        textAreaTestCaseInput = new javax.swing.JTextArea();
        scrollTestCaseOutput = new javax.swing.JScrollPane();
        textAreaTestCaseOutput = new javax.swing.JTextArea();
        panelBottomButtons = new javax.swing.JPanel();
        btnOK = new javax.swing.JButton();
        btnOKAndSave = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();

        popupMenuUpDown.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
                popupMenuUpDownPopupMenuCanceled(evt);
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });

        menuItemUp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/davidbuzatto/jjudge/gui/icons/arrow_up.png"))); // NOI18N
        menuItemUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemUpActionPerformed(evt);
            }
        });
        popupMenuUpDown.add(menuItemUp);

        menuItemDown.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/davidbuzatto/jjudge/gui/icons/arrow_down.png"))); // NOI18N
        menuItemDown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemDownActionPerformed(evt);
            }
        });
        popupMenuUpDown.add(menuItemDown);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("br/com/davidbuzatto/jjudge/gui/Bundle"); // NOI18N
        setTitle(bundle.getString("EditTestSetsDialog.title")); // NOI18N
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        panelTestSets.setBorder(javax.swing.BorderFactory.createTitledBorder(bundle.getString("EditTestSetsDialog.panelTestSets.border.title"))); // NOI18N

        listTestSets.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        listTestSets.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                listTestSetsMousePressed(evt);
            }
        });
        listTestSets.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listTestSetsValueChanged(evt);
            }
        });
        scrollTestSets.setViewportView(listTestSets);

        lblTestSetDescription.setText(bundle.getString("EditTestSetsDialog.lblTestSetDescription.text")); // NOI18N

        lblTestSetProgLanguage.setText(bundle.getString("EditTestSetsDialog.lblTestSetProgLanguage.text")); // NOI18N

        javax.swing.GroupLayout panelTestSetSetLayout = new javax.swing.GroupLayout(panelTestSetSet);
        panelTestSetSet.setLayout(panelTestSetSetLayout);
        panelTestSetSetLayout.setHorizontalGroup(
            panelTestSetSetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTestSetSetLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelTestSetSetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelTestSetSetLayout.createSequentialGroup()
                        .addComponent(lblTestSetProgLanguage)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comboTestSetProgLanguage, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(panelTestSetSetLayout.createSequentialGroup()
                        .addComponent(lblTestSetDescription)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fieldTestSetDescription)))
                .addContainerGap())
        );
        panelTestSetSetLayout.setVerticalGroup(
            panelTestSetSetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelTestSetSetLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelTestSetSetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTestSetDescription)
                    .addComponent(fieldTestSetDescription, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelTestSetSetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboTestSetProgLanguage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTestSetProgLanguage))
                .addContainerGap())
        );

        btnNewTestSet.setText(bundle.getString("EditTestSetsDialog.btnNewTestSet.text")); // NOI18N
        btnNewTestSet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewTestSetActionPerformed(evt);
            }
        });

        btnSaveTestSet.setText(bundle.getString("EditTestSetsDialog.btnSaveTestSet.text")); // NOI18N
        btnSaveTestSet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveTestSetActionPerformed(evt);
            }
        });

        btnDeleteTestSet.setText(bundle.getString("EditTestSetsDialog.btnDeleteTestSet.text")); // NOI18N
        btnDeleteTestSet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteTestSetActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelTestSetsLayout = new javax.swing.GroupLayout(panelTestSets);
        panelTestSets.setLayout(panelTestSetsLayout);
        panelTestSetsLayout.setHorizontalGroup(
            panelTestSetsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTestSetsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelTestSetsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelTestSetSet, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(scrollTestSets, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelTestSetsLayout.createSequentialGroup()
                        .addGap(0, 15, Short.MAX_VALUE)
                        .addComponent(btnNewTestSet)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSaveTestSet)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDeleteTestSet)))
                .addContainerGap())
        );
        panelTestSetsLayout.setVerticalGroup(
            panelTestSetsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTestSetsLayout.createSequentialGroup()
                .addComponent(scrollTestSets)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelTestSetSet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelTestSetsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSaveTestSet)
                    .addComponent(btnDeleteTestSet)
                    .addComponent(btnNewTestSet))
                .addContainerGap())
        );

        panelTests.setBorder(javax.swing.BorderFactory.createTitledBorder(bundle.getString("EditTestSetsDialog.panelTests.border.title"))); // NOI18N

        listTests.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        listTests.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                listTestsMousePressed(evt);
            }
        });
        listTests.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listTestsValueChanged(evt);
            }
        });
        scrollTests.setViewportView(listTests);

        btnNewTest.setText(bundle.getString("EditTestSetsDialog.btnNewTest.text")); // NOI18N
        btnNewTest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewTestActionPerformed(evt);
            }
        });

        btnSaveTest.setText(bundle.getString("EditTestSetsDialog.btnSaveTest.text")); // NOI18N
        btnSaveTest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveTestActionPerformed(evt);
            }
        });

        btnDeleteTest.setText(bundle.getString("EditTestSetsDialog.btnDeleteTest.text")); // NOI18N
        btnDeleteTest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteTestActionPerformed(evt);
            }
        });

        lblTestPresName.setText(bundle.getString("EditTestSetsDialog.lblTestPresName.text")); // NOI18N

        lblTestName.setText(bundle.getString("EditTestSetsDialog.lblTestName.text")); // NOI18N

        javax.swing.GroupLayout panelTestDataLayout = new javax.swing.GroupLayout(panelTestData);
        panelTestData.setLayout(panelTestDataLayout);
        panelTestDataLayout.setHorizontalGroup(
            panelTestDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTestDataLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelTestDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelTestDataLayout.createSequentialGroup()
                        .addComponent(lblTestName)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fieldTestName, javax.swing.GroupLayout.DEFAULT_SIZE, 224, Short.MAX_VALUE))
                    .addGroup(panelTestDataLayout.createSequentialGroup()
                        .addComponent(lblTestPresName)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fieldTestPresName, javax.swing.GroupLayout.DEFAULT_SIZE, 196, Short.MAX_VALUE)))
                .addContainerGap())
        );
        panelTestDataLayout.setVerticalGroup(
            panelTestDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelTestDataLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelTestDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fieldTestPresName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTestPresName))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelTestDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTestName)
                    .addComponent(fieldTestName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout panelTestsLayout = new javax.swing.GroupLayout(panelTests);
        panelTests.setLayout(panelTestsLayout);
        panelTestsLayout.setHorizontalGroup(
            panelTestsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTestsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelTestsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scrollTests, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelTestsLayout.createSequentialGroup()
                        .addGap(0, 49, Short.MAX_VALUE)
                        .addComponent(btnNewTest)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSaveTest)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDeleteTest))
                    .addComponent(panelTestData, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        panelTestsLayout.setVerticalGroup(
            panelTestsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTestsLayout.createSequentialGroup()
                .addComponent(scrollTests)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelTestData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelTestsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDeleteTest)
                    .addComponent(btnSaveTest)
                    .addComponent(btnNewTest))
                .addContainerGap())
        );

        panelTestCases.setBorder(javax.swing.BorderFactory.createTitledBorder(bundle.getString("EditTestSetsDialog.panelTestCases.border.title"))); // NOI18N

        listTestCases.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        listTestCases.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                listTestCasesMousePressed(evt);
            }
        });
        listTestCases.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listTestCasesValueChanged(evt);
            }
        });
        scrollTestCases.setViewportView(listTestCases);

        btnNewTestCase.setText(bundle.getString("EditTestSetsDialog.btnNewTestCase.text")); // NOI18N
        btnNewTestCase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewTestCaseActionPerformed(evt);
            }
        });

        btnSaveTestCase.setText(bundle.getString("EditTestSetsDialog.btnSaveTestCase.text")); // NOI18N
        btnSaveTestCase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveTestCaseActionPerformed(evt);
            }
        });

        btnDeleteTestCase.setText(bundle.getString("EditTestSetsDialog.btnDeleteTestCase.text")); // NOI18N
        btnDeleteTestCase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteTestCaseActionPerformed(evt);
            }
        });

        lblTestCaseInput.setText(bundle.getString("EditTestSetsDialog.lblTestCaseInput.text")); // NOI18N

        lblTestCaseOutput.setText(bundle.getString("EditTestSetsDialog.lblTestCaseOutput.text")); // NOI18N

        textAreaTestCaseInput.setColumns(20);
        textAreaTestCaseInput.setFont(new java.awt.Font("Monospaced", 0, 12)); // NOI18N
        textAreaTestCaseInput.setRows(5);
        scrollTestCaseInput.setViewportView(textAreaTestCaseInput);

        textAreaTestCaseOutput.setColumns(20);
        textAreaTestCaseOutput.setFont(new java.awt.Font("Monospaced", 0, 12)); // NOI18N
        textAreaTestCaseOutput.setRows(5);
        scrollTestCaseOutput.setViewportView(textAreaTestCaseOutput);

        javax.swing.GroupLayout panelTestCaseDataLayout = new javax.swing.GroupLayout(panelTestCaseData);
        panelTestCaseData.setLayout(panelTestCaseDataLayout);
        panelTestCaseDataLayout.setHorizontalGroup(
            panelTestCaseDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTestCaseDataLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelTestCaseDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTestCaseInput)
                    .addComponent(lblTestCaseOutput))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelTestCaseDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scrollTestCaseInput)
                    .addComponent(scrollTestCaseOutput))
                .addContainerGap())
        );
        panelTestCaseDataLayout.setVerticalGroup(
            panelTestCaseDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTestCaseDataLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelTestCaseDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTestCaseInput)
                    .addComponent(scrollTestCaseInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelTestCaseDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTestCaseOutput)
                    .addComponent(scrollTestCaseOutput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout panelTestCasesLayout = new javax.swing.GroupLayout(panelTestCases);
        panelTestCases.setLayout(panelTestCasesLayout);
        panelTestCasesLayout.setHorizontalGroup(
            panelTestCasesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTestCasesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelTestCasesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelTestCaseData, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelTestCasesLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnNewTestCase)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSaveTestCase)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDeleteTestCase))
                    .addComponent(scrollTestCases, javax.swing.GroupLayout.DEFAULT_SIZE, 281, Short.MAX_VALUE))
                .addContainerGap())
        );
        panelTestCasesLayout.setVerticalGroup(
            panelTestCasesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelTestCasesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(scrollTestCases, javax.swing.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelTestCaseData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelTestCasesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnNewTestCase, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnSaveTestCase, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnDeleteTestCase, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );

        btnOK.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/davidbuzatto/jjudge/gui/icons/accept.png"))); // NOI18N
        btnOK.setText(bundle.getString("EditTestSetsDialog.btnOK.text")); // NOI18N
        btnOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOKActionPerformed(evt);
            }
        });

        btnOKAndSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/davidbuzatto/jjudge/gui/icons/disk.png"))); // NOI18N
        btnOKAndSave.setText(bundle.getString("EditTestSetsDialog.btnOKAndSave.text")); // NOI18N
        btnOKAndSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOKAndSaveActionPerformed(evt);
            }
        });

        btnCancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/davidbuzatto/jjudge/gui/icons/stop.png"))); // NOI18N
        btnCancel.setText(bundle.getString("EditTestSetsDialog.btnCancel.text")); // NOI18N
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelBottomButtonsLayout = new javax.swing.GroupLayout(panelBottomButtons);
        panelBottomButtons.setLayout(panelBottomButtonsLayout);
        panelBottomButtonsLayout.setHorizontalGroup(
            panelBottomButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelBottomButtonsLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnOK)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnOKAndSave)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCancel)
                .addContainerGap())
        );
        panelBottomButtonsLayout.setVerticalGroup(
            panelBottomButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBottomButtonsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelBottomButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnOK)
                    .addComponent(btnOKAndSave)
                    .addComponent(btnCancel))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelTestSets, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelTests, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelTestCases, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(panelBottomButtons, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelTests, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelTestSets, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelTestCases, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelBottomButtons, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveTestSetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveTestSetActionPerformed
        
        if ( selectedTestSet == null ) {
            selectedTestSet = new TestSet();
            selectedTestSet.setTests( new ArrayList<>() );
            testSets.add( selectedTestSet );
        }
        
        selectedTestSet.setDescription( fieldTestSetDescription.getText() );
        selectedTestSet.setProgrammingLanguage( 
                TestProgrammingLanguage.valueOf( comboTestSetProgLanguage.getSelectedItem().toString() ) );
        
        listModelTestSets.clear();
        for ( TestSet ts : this.testSets ) {
            listModelTestSets.addElement( ts );
        }
        
        selectedTestSet = null;
        fieldTestSetDescription.setText( "" );
        comboTestSetProgLanguage.setSelectedIndex( 0 );
        
        selectedTest = null;
        listModelTests.clear();
        fieldTestPresName.setText( "" );
        fieldTestName.setText( "" );
        
        selectedTestCase = null;
        listModelTestCases.clear();
        textAreaTestCaseInput.setText( "" );
        textAreaTestCaseOutput.setText( "" );   
        
    }//GEN-LAST:event_btnSaveTestSetActionPerformed

    private void btnDeleteTestSetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteTestSetActionPerformed
        
        int index = listTestSets.getSelectedIndex();
        
        if ( index != -1 ) {
            
            if ( JOptionPane.showConfirmDialog( this, 
                    bundle.getString( "EditTestSetsDialog.btnDeleteTestSetActionPerformed.confirmDeletion" ), 
                    bundle.getString( "EditTestSetsDialog.btnDeleteTestSetActionPerformed.title" ), JOptionPane.YES_NO_OPTION ) == 
                    JOptionPane.YES_OPTION ) {
                
                listModelTestSets.remove( index );
                testSets.remove( index );
                
                selectedTestSet = null;
                fieldTestSetDescription.setText( "" );
                comboTestSetProgLanguage.setSelectedItem( 0 );
                
                selectedTest = null;
                fieldTestPresName.setText( "" );
                fieldTestName.setText( "" );
                listModelTests.clear();

                selectedTestCase = null;
                textAreaTestCaseInput.setText( "" );
                textAreaTestCaseOutput.setText( "" );
                listModelTestCases.clear();
                
            }
            
        }
        
    }//GEN-LAST:event_btnDeleteTestSetActionPerformed

    private void btnSaveTestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveTestActionPerformed
        
        if ( selectedTestSet != null ) {
            
            if ( selectedTest == null ) {
                selectedTest = new Test();
                selectedTest.setTestCases( new ArrayList<>() );
                selectedTestSet.getTests().add( selectedTest );
            }

            selectedTest.setPresentationName( fieldTestPresName.getText() );
            selectedTest.setName( fieldTestName.getText() );

            listModelTests.clear();
            for ( Test t : selectedTestSet.getTests() ) {
                listModelTests.addElement( t );
            }

            selectedTest = null;
            fieldTestPresName.setText( "" );
            fieldTestName.setText( "" );

            selectedTestCase = null;
            listModelTestCases.clear();
            textAreaTestCaseInput.setText( "" );
            textAreaTestCaseOutput.setText( "" );
            
            listTestSets.updateUI();
        
        } else {
            
            JOptionPane.showMessageDialog( 
                    this, 
                    bundle.getString( "EditTestSetsDialog.btnSaveTestActionPerformed." ),
                    bundle.getString( "EditTestSetsDialog.errorTitle" ), 
                    JOptionPane.ERROR_MESSAGE );
            
        }
        
    }//GEN-LAST:event_btnSaveTestActionPerformed

    private void btnDeleteTestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteTestActionPerformed
        
        int index = listTests.getSelectedIndex();
        
        if ( index != -1 ) {
            
            if ( JOptionPane.showConfirmDialog( this, 
                    bundle.getString( "EditTestSetsDialog.btnDeleteTestActionPerformed.deleteMessage" ), 
                    bundle.getString( "EditTestSetsDialog.btnDeleteTestActionPerformed.title" ), JOptionPane.YES_NO_OPTION ) == 
                    JOptionPane.YES_OPTION ) {
                
                listModelTests.remove( index );
                selectedTestSet.getTests().remove( index );
                
                selectedTest = null;
                fieldTestPresName.setText( "" );
                fieldTestName.setText( "" );

                selectedTestCase = null;
                textAreaTestCaseInput.setText( "" );
                textAreaTestCaseOutput.setText( "" );
                listModelTestCases.clear();
                
            }
            
        }
        
    }//GEN-LAST:event_btnDeleteTestActionPerformed

    private void btnSaveTestCaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveTestCaseActionPerformed
        
        if ( selectedTest != null ) {
            
            if ( selectedTestCase == null ) {
                selectedTestCase = new TestCase();
                selectedTest.getTestCases().add( selectedTestCase );
            }

            selectedTestCase.setInput( textAreaTestCaseInput.getText() );
            selectedTestCase.setOutput( textAreaTestCaseOutput.getText() );

            listModelTestCases.clear();
            for ( TestCase tc : selectedTest.getTestCases() ) {
                listModelTestCases.addElement( tc );
            }

            selectedTestCase = null;
            textAreaTestCaseInput.setText( "" );
            textAreaTestCaseOutput.setText( "" ); 
            
            listTests.updateUI();
            
        } else {
            
            JOptionPane.showMessageDialog( 
                    this, 
                    bundle.getString( "EditTestSetsDialog.btnSaveTestCaseActionPerformed.selectTest" ), 
                    bundle.getString( "EditTestSetsDialog.errorTitle" ), 
                    JOptionPane.ERROR_MESSAGE );
            
        }
        
    }//GEN-LAST:event_btnSaveTestCaseActionPerformed

    private void btnDeleteTestCaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteTestCaseActionPerformed
        
        int index = listTestCases.getSelectedIndex();
        
        if ( index != -1 ) {
            
            if ( JOptionPane.showConfirmDialog( this, 
                    bundle.getString( "EditTestSetsDialog.btnDeleteTestCaseActionPerformed.deleteMessage" ), 
                    bundle.getString( "EditTestSetsDialog.btnDeleteTestCaseActionPerformed.title" ), JOptionPane.YES_NO_OPTION ) == 
                    JOptionPane.YES_OPTION ) {
                
                listModelTestCases.remove( index );
                selectedTest.getTestCases().remove( index );

                selectedTestCase = null;
                textAreaTestCaseInput.setText( "" );
                textAreaTestCaseOutput.setText( "" );
                
            }
            
        }
        
    }//GEN-LAST:event_btnDeleteTestCaseActionPerformed

    private void btnOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOKActionPerformed
        dispose();
    }//GEN-LAST:event_btnOKActionPerformed

    private void btnOKAndSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOKAndSaveActionPerformed
        
        Gson gson = new GsonBuilder().setPrettyPrinting().create();
	String json = gson.toJson( testSets );
        
        JFileChooser jfc = new JFileChooser( new File( Utils.getPref( Utils.PREF_SAVE_TEST_SETS_PATH ) ) );
        jfc.setDialogTitle( bundle.getString( "EditTestSetsDialog.btnOKAndSaveActionPerformed.save" ) );
        jfc.setMultiSelectionEnabled( false );
        jfc.setFileSelectionMode( JFileChooser.FILES_ONLY );
        jfc.removeChoosableFileFilter( jfc.getFileFilter() );
        jfc.setFileFilter( new FileNameExtensionFilter( bundle.getString( "EditTestSetsDialog.btnOKAndSaveActionPerformed.fileTypes" ), "json" ) );
        jfc.setSelectedFile( new File( "testSets.json" ) );

        if ( jfc.showSaveDialog( null ) == JFileChooser.APPROVE_OPTION ) {

            File f = jfc.getSelectedFile();
            boolean save = true;

            if ( f.exists() ) {
                if ( JOptionPane.showConfirmDialog( null, 
                        bundle.getString( "EditTestSetsDialog.btnOKAndSaveActionPerformed.overwriteMessage" ), 
                        bundle.getString( "EditTestSetsDialog.btnOKAndSaveActionPerformed.confirm" ), 
                        JOptionPane.YES_NO_OPTION ) == JOptionPane.NO_OPTION ) {
                    save = false;
                }
            } else {
                if ( !f.getName().endsWith( ".json" ) ) {
                    f = new File( f.getAbsolutePath() + ".json" );
                }
            }

            if ( save ) {
                Utils.setPref( Utils.PREF_SAVE_TEST_SETS_PATH, f.getParentFile().getAbsolutePath() );
                try ( PrintStream ps = new PrintStream( new FileOutputStream( f ) ) ) {
                    ps.print( json );
                } catch ( FileNotFoundException exc ) {
                    Utils.showException( exc );
                }
            }
        }
        
        dispose();
        
    }//GEN-LAST:event_btnOKAndSaveActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        testSets = null;
        dispose();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void listTestSetsValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listTestSetsValueChanged
        
        if ( evt.getValueIsAdjusting() ) {
            selectTestSetListItem();
        }
        
    }//GEN-LAST:event_listTestSetsValueChanged

    private void selectTestSetListItem() {
        
        selectedTestSet = listTestSets.getSelectedValue();
        selectedTest = null;
        selectedTestCase = null;
        
        fieldTestSetDescription.setText( selectedTestSet.getDescription() );
        comboTestSetProgLanguage.setSelectedItem( selectedTestSet.getProgrammingLanguage().toString() );
        
        listModelTests.clear();
        for ( Test t : selectedTestSet.getTests() ) {
            listModelTests.addElement( t );
        }
        
        fieldTestPresName.setText( "" );
        fieldTestName.setText( "" );
        
        listModelTestCases.clear();
        textAreaTestCaseInput.setText( "" );
        textAreaTestCaseOutput.setText( "" );
        
    }

    private void listTestsValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listTestsValueChanged
        
        if ( evt.getValueIsAdjusting() ) {
            selectTestListItem();
        }
        
    }//GEN-LAST:event_listTestsValueChanged

    private void selectTestListItem() {
        
        selectedTest = listTests.getSelectedValue();
        selectedTestCase = null;
        
        fieldTestPresName.setText( selectedTest.getPresentationName() );
        fieldTestName.setText( selectedTest.getName() );
        
        listModelTestCases.clear();
        for ( TestCase tc : selectedTest.getTestCases() ) {
            listModelTestCases.addElement( tc );
        }
        
        textAreaTestCaseInput.setText( "" );
        textAreaTestCaseOutput.setText( "" );
        
    }

    private void listTestCasesValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listTestCasesValueChanged
        
        if ( evt.getValueIsAdjusting() ) {
            selectTestCaseListItem();
        }
        
    }//GEN-LAST:event_listTestCasesValueChanged

    private void selectTestCaseListItem() {
        
        selectedTestCase = listTestCases.getSelectedValue();
        
        textAreaTestCaseInput.setText( selectedTestCase.getInput() );
        textAreaTestCaseOutput.setText( selectedTestCase.getOutput() );
        
    }

    private void btnNewTestSetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewTestSetActionPerformed
        
        selectedTestSet = null;
        fieldTestSetDescription.setText( "" );
        comboTestSetProgLanguage.setSelectedIndex( 0 );
        
        listModelTestSets.clear();
        for ( TestSet ts : this.testSets ) {
            listModelTestSets.addElement( ts );
        }
        
        selectedTest = null;
        listModelTests.clear();
        fieldTestPresName.setText( "" );
        fieldTestName.setText( "" );
        
        selectedTestCase = null;
        listModelTestCases.clear();
        textAreaTestCaseInput.setText( "" );
        textAreaTestCaseOutput.setText( "" );
        
    }//GEN-LAST:event_btnNewTestSetActionPerformed

    private void btnNewTestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewTestActionPerformed
        
        if ( selectedTestSet != null ) {
            
            selectedTest = null;
            fieldTestPresName.setText( "" );
            fieldTestName.setText( "" );

            listModelTests.clear();
            for ( Test t : selectedTestSet.getTests() ) {
                listModelTests.addElement( t );
            }

            selectedTestCase = null;
            listModelTestCases.clear();
            textAreaTestCaseInput.setText( "" );
            textAreaTestCaseOutput.setText( "" );
            
        } else {
            
            JOptionPane.showMessageDialog( 
                    this, 
                    bundle.getString( "EditTestSetsDialog.btnNewTestActionPerformed.selectTestSet" ), 
                    bundle.getString( "EditTestSetsDialog.errorTitle" ), 
                    JOptionPane.ERROR_MESSAGE );
            
        }
        
    }//GEN-LAST:event_btnNewTestActionPerformed

    private void btnNewTestCaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewTestCaseActionPerformed
        
        if ( selectedTest != null ) {
            
            selectedTestCase = null;
            textAreaTestCaseInput.setText( "" );
            textAreaTestCaseOutput.setText( "" );

            listModelTestCases.clear();
            for ( TestCase tc : selectedTest.getTestCases() ) {
                listModelTestCases.addElement( tc );
            }
            
        } else {
            
            JOptionPane.showMessageDialog( 
                    this, 
                    bundle.getString( "EditTestSetsDialog.btnNewTestCaseActionPerformed.selectTest" ), 
                    bundle.getString( "EditTestSetsDialog.errorTitle" ), 
                    JOptionPane.ERROR_MESSAGE );
            
        }
        
    }//GEN-LAST:event_btnNewTestCaseActionPerformed

    private void listTestSetsMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listTestSetsMousePressed
        
        if ( SwingUtilities.isRightMouseButton( evt ) ) {
            
            int index = listTestSets.locationToIndex( evt.getPoint() );
            
            if ( index != -1 ) {
                listTestSets.setSelectedIndex( index );
                listTestSets.requestFocus();
                preparePopupMenuUpDown( listModelTestSets, index );
                selectedIndexUpDown = index;
                selectTestSetListItem();
                popupMenuUpDown.show( listTestSets, evt.getX(), evt.getY() );
            }
            
        }
        
    }//GEN-LAST:event_listTestSetsMousePressed

    private void menuItemUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemUpActionPerformed
        moveItem( selectedIndexUpDown, selectedIndexUpDown-1 );
    }//GEN-LAST:event_menuItemUpActionPerformed

    private void moveItem( int from, int to ) {
        
        if ( popupMenuUpDown.getInvoker() == listTestSets ) {
            
            moveItem( 
                    listModelTestSets, 
                    listTestSets, 
                    testSets, 
                    from, 
                    to );
            
        } else if ( popupMenuUpDown.getInvoker() == listTests ) {        
            
            moveItem( 
                    listModelTests, 
                    listTests, 
                    selectedTestSet.getTests(), 
                    from, 
                    to );
            
        } else if ( popupMenuUpDown.getInvoker() == listTestCases ) {        
            
            moveItem( 
                    listModelTestCases, 
                    listTestCases, 
                    selectedTest.getTestCases(), 
                    from, 
                    to );
            
        }
        
        menuItemUp.setEnabled( true );
        menuItemDown.setEnabled( true );
        selectedIndexUpDown = -1;
        
    }
    
    private void menuItemDownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemDownActionPerformed
        moveItem( selectedIndexUpDown, selectedIndexUpDown+1 );
    }//GEN-LAST:event_menuItemDownActionPerformed

    private void listTestsMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listTestsMousePressed
        
        if ( SwingUtilities.isRightMouseButton( evt ) ) {
            
            int index = listTests.locationToIndex( evt.getPoint() );
            
            if ( index != -1 ) {
                listTests.setSelectedIndex( index );
                listTests.requestFocus();
                preparePopupMenuUpDown( listModelTests, index );
                selectedIndexUpDown = index;
                selectTestListItem();
                popupMenuUpDown.show( listTests, evt.getX(), evt.getY() );
            }
            
        }
        
    }//GEN-LAST:event_listTestsMousePressed

    private void listTestCasesMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listTestCasesMousePressed
        
        if ( SwingUtilities.isRightMouseButton( evt ) ) {
            
            int index = listTestCases.locationToIndex( evt.getPoint() );
            
            if ( index != -1 ) {
                listTestCases.setSelectedIndex( index );
                listTestCases.requestFocus();
                preparePopupMenuUpDown( listModelTestCases, index );
                selectedIndexUpDown = index;
                selectTestCaseListItem();
                popupMenuUpDown.show( listTestCases, evt.getX(), evt.getY() );
            }
            
        }
        
    }//GEN-LAST:event_listTestCasesMousePressed

    private void popupMenuUpDownPopupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_popupMenuUpDownPopupMenuCanceled
        menuItemUp.setEnabled( true );
        menuItemDown.setEnabled( true );
    }//GEN-LAST:event_popupMenuUpDownPopupMenuCanceled

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        testSets = null;
    }//GEN-LAST:event_formWindowClosing

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnDeleteTest;
    private javax.swing.JButton btnDeleteTestCase;
    private javax.swing.JButton btnDeleteTestSet;
    private javax.swing.JButton btnNewTest;
    private javax.swing.JButton btnNewTestCase;
    private javax.swing.JButton btnNewTestSet;
    private javax.swing.JButton btnOK;
    private javax.swing.JButton btnOKAndSave;
    private javax.swing.JButton btnSaveTest;
    private javax.swing.JButton btnSaveTestCase;
    private javax.swing.JButton btnSaveTestSet;
    private javax.swing.JComboBox<String> comboTestSetProgLanguage;
    private javax.swing.JTextField fieldTestName;
    private javax.swing.JTextField fieldTestPresName;
    private javax.swing.JTextField fieldTestSetDescription;
    private javax.swing.JLabel lblTestCaseInput;
    private javax.swing.JLabel lblTestCaseOutput;
    private javax.swing.JLabel lblTestName;
    private javax.swing.JLabel lblTestPresName;
    private javax.swing.JLabel lblTestSetDescription;
    private javax.swing.JLabel lblTestSetProgLanguage;
    private javax.swing.JList<TestCase> listTestCases;
    private javax.swing.JList<TestSet> listTestSets;
    private javax.swing.JList<Test> listTests;
    private javax.swing.JMenuItem menuItemDown;
    private javax.swing.JMenuItem menuItemUp;
    private javax.swing.JPanel panelBottomButtons;
    private javax.swing.JPanel panelTestCaseData;
    private javax.swing.JPanel panelTestCases;
    private javax.swing.JPanel panelTestData;
    private javax.swing.JPanel panelTestSetSet;
    private javax.swing.JPanel panelTestSets;
    private javax.swing.JPanel panelTests;
    private javax.swing.JPopupMenu popupMenuUpDown;
    private javax.swing.JScrollPane scrollTestCaseInput;
    private javax.swing.JScrollPane scrollTestCaseOutput;
    private javax.swing.JScrollPane scrollTestCases;
    private javax.swing.JScrollPane scrollTestSets;
    private javax.swing.JScrollPane scrollTests;
    private javax.swing.JTextArea textAreaTestCaseInput;
    private javax.swing.JTextArea textAreaTestCaseOutput;
    // End of variables declaration//GEN-END:variables
}
