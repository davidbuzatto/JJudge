package br.com.davidbuzatto.jjudge.gui;

import br.com.davidbuzatto.jjudge.stylechecker.StyleCheckerResult;
import br.com.davidbuzatto.jjudge.stylechecker.StyleCheckerResultItem;
import br.com.davidbuzatto.jjudge.stylechecker.StyleCheckerTestResult;
import br.com.davidbuzatto.jjudge.testsets.Student;
import br.com.davidbuzatto.jjudge.utils.Colors;
import br.com.davidbuzatto.jjudge.utils.Utils;
import java.awt.Color;
import java.awt.event.ItemEvent;
import java.util.List;
import java.util.Map;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;

/**
 *
 * @author Prof. Dr. David Buzatto
 */
public class StyleCheckerResultFrame extends javax.swing.JFrame {

    private StyleCheckerTestResult result;
    private DefaultComboBoxModel<ResultComboItem> comboModel;
    
    /**
     * Creates new form StyleCheckerResultFrame
     */
    public StyleCheckerResultFrame( StyleCheckerTestResult result, Color styleCheckerBackgroundColor ) {
        
        this.result = result;
        initComponents();
        
        textPaneSourceCode.setBackground( styleCheckerBackgroundColor );
        setIconImage( new ImageIcon( getClass().getResource(
                "/br/com/davidbuzatto/jjudge/gui/icons/accept.png" ) ).getImage() );
        
        prepareResultsCombo();
        
    }

    private void prepareResultsCombo() {
        
        comboModel = (DefaultComboBoxModel<ResultComboItem>) comboResults.getModel();
        
        for ( StyleCheckerResult r : result.getStandaloneResults() ) {
            comboModel.addElement( new ResultComboItem( r ) );
        }
        
        for ( Map.Entry<Student, List<StyleCheckerResult>> e : result.getStudentResults().entrySet() ) {
            for ( StyleCheckerResult r : e.getValue() ) {
                comboModel.addElement( new ResultComboItem( r ) );
            }
        }
        
    }
    
    private void loadStyleCheckerResult( StyleCheckerResult result ) {

        textPaneSourceCode.setText( "" );
        
        for ( StyleCheckerResultItem r : result.getItems() ) {
            Color c = Colors.PASSED;
            if ( r.getError() != null ) {
                c = Colors.REPROVED;
            }
            Utils.addFormattedText( textPaneSourceCode, r.toString() + "\n", c, false );
        }
        
        textPaneSourceCode.setCaretPosition( 0 );

    }
    
    private class ResultComboItem {
        
        StyleCheckerResult result;

        public ResultComboItem( StyleCheckerResult result ) {
            this.result = result;
        }
        
        public StyleCheckerResult getResult() {
            return result;
        }
        
        @Override
        public String toString() {
            if ( result.getStudent() != null ) {
                return String.format( "%s - %s", result.getStudent(), result.getFile().getName() );
            }
            return String.format( "%s", result.getFile().getName() );
        }
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings( "unchecked" )
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        resultsPanel = new javax.swing.JPanel();
        comboResults = new javax.swing.JComboBox<>();
        scrollSourceCode = new javax.swing.JScrollPane();
        textPaneSourceCode = new javax.swing.JTextPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("br/com/davidbuzatto/jjudge/gui/Bundle"); // NOI18N
        setTitle(bundle.getString("StyleCheckerResultFrame.title")); // NOI18N

        resultsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(bundle.getString("StyleCheckerResultFrame.resultsPanel.title"))); // NOI18N

        comboResults.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboResultsItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout resultsPanelLayout = new javax.swing.GroupLayout(resultsPanel);
        resultsPanel.setLayout(resultsPanelLayout);
        resultsPanelLayout.setHorizontalGroup(
            resultsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(resultsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(comboResults, 0, 566, Short.MAX_VALUE)
                .addContainerGap())
        );
        resultsPanelLayout.setVerticalGroup(
            resultsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(resultsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(comboResults, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        textPaneSourceCode.setEditable(false);
        textPaneSourceCode.setFont(new java.awt.Font("Monospaced", 0, 12)); // NOI18N
        scrollSourceCode.setViewportView(textPaneSourceCode);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(resultsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(scrollSourceCode)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(resultsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrollSourceCode, javax.swing.GroupLayout.DEFAULT_SIZE, 531, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void comboResultsItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboResultsItemStateChanged
        
        if ( evt.getStateChange() == ItemEvent.SELECTED ) {
            if ( comboModel.getSelectedItem() instanceof ResultComboItem r ) {
                loadStyleCheckerResult( r.result );
            }
        }
        
    }//GEN-LAST:event_comboResultsItemStateChanged

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<ResultComboItem> comboResults;
    private javax.swing.JPanel resultsPanel;
    private javax.swing.JScrollPane scrollSourceCode;
    private javax.swing.JTextPane textPaneSourceCode;
    // End of variables declaration//GEN-END:variables
}
